-- MySQL Script generated by MySQL Workbench
-- Mon Jun 14 14:42:59 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema brewbox
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema brewbox
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `brewbox` DEFAULT CHARACTER SET utf8 ;
USE `brewbox` ;

-- -----------------------------------------------------
-- Table `brewbox`.`cocktails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`cocktails` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brewbox`.`geschiedenis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`geschiedenis` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `timestamp` DATETIME NULL,
  `cocktails_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cocktails_id`),
  CONSTRAINT `fk_geschiedenis_cocktails1`
    FOREIGN KEY (`cocktails_id`)
    REFERENCES `brewbox`.`cocktails` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brewbox`.`dranken`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`dranken` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `naam` VARCHAR(45) NULL,
  `container` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brewbox`.`dranken_has_cocktails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`dranken_has_cocktails` (
  `dranken_id` INT NOT NULL,
  `cocktails_id` INT NOT NULL,
  `percentage` FLOAT NULL,
  PRIMARY KEY (`dranken_id`, `cocktails_id`),
  CONSTRAINT `fk_dranken_has_cocktails_dranken1`
    FOREIGN KEY (`dranken_id`)
    REFERENCES `brewbox`.`dranken` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dranken_has_cocktails_cocktails1`
    FOREIGN KEY (`cocktails_id`)
    REFERENCES `brewbox`.`cocktails` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brewbox`.`deviceTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`deviceTypes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brewbox`.`devices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`devices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `type_id`),
  CONSTRAINT `fk_devices_deviceTypes1`
    FOREIGN KEY (`type_id`)
    REFERENCES `brewbox`.`deviceTypes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brewbox`.`historiekDevices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brewbox`.`historiekDevices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `devices_id` INT NOT NULL,
  `value` FLOAT NULL,
  `timestamp` DATETIME NULL,
  PRIMARY KEY (`id`, `devices_id`),
  CONSTRAINT `fk_historiekDevices_devices1`
    FOREIGN KEY (`devices_id`)
    REFERENCES `brewbox`.`devices` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
